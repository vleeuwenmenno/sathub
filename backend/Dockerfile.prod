# Build stage
FROM golang:1.25-alpine AS builder

# Disable GCO for cross-compilation support
ENV CGO_ENABLED=0

# Install build dependencies
RUN apk add --no-cache git gcc musl-dev sqlite

# Set working directory
WORKDIR /app

# Copy go mod files first for better caching
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN go build -ldflags="-s -w" -o main .

# Production stage
FROM alpine:3.22

# Install runtime dependencies
RUN apk add --no-cache ca-certificates sqlite wget

# Create non-root user
RUN addgroup -g 1001 appuser && \
  adduser -D -u 1001 -G appuser appuser

# Set working directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/main .

# Copy email templates (needed at runtime)
COPY --from=builder /app/templates ./templates

# Create directory for database and uploads
RUN mkdir -p /app/data /app/uploads && \
  chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 4001

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:4001/health || exit 1

# Run the application
CMD ["./main"]